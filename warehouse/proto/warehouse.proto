syntax = "proto3";

package warehouse;

option go_package = "github.com/CrabStash/crab-stash-protofiles/warehouse/proto";
import "google/protobuf/empty.proto";

// enums
enum Roles {
  ROLE_VIEWER = 0;
  ROLE_CC = 1;
  ROLE_MOD = 2;
  ROLE_ADMIN = 3;
  ROLE_OWNER = 4;
}

// GetInfo
message GetInfoRequest {
  string warehouseID = 1; // @gotags: valid:"required,minstringlength(1)"
  string userID = 2; // @gotags: valid:"required,minstringlength(1)"
}

message GetInfoResponse {
  message Response {
    string name = 1;
    string desc = 2;
    string logo = 3;
    string owner = 4;
    bool isPhysical = 5;
    int64 capacity = 6;
    Roles role = 7;
  }
  int32 status = 1;
  // @gotags: json:"response"
  oneof response {
    // @gotags: json:"data"
    Response data = 2;
    string error = 3;
  }
}

// UpdateWarehouse
message UpdateRequest {
  string warehouseID = 1; // @gotags: valid:"required"
  string name = 2; // @gotags: valid:"required,minstringlength(1)" form:"name"
  string desc = 3; // @gotags: valid:"required,minstringlength(1)" form:"desc"
  string logo = 4; // @gotags: valid:"optional,url"
  bool isPhysical = 5; // @gotags: valid:"-" form:"isPhysical"
  int64 capacity = 6; // @gotags: valid:"int" form:"capacity"
}

message UpdateResponse {
  int32 status = 1;
  string response = 2;
}

// CreateWarehouse
message CreateRequest {
  string ownerID = 1; // @gotags: valid:"required" form:"ownerID"
  string name = 2; // @gotags: valid:"required,minstringlength(1)" form:"name"
  string desc = 3; // @gotags: valid:"required,minstringlength(1)" form:"desc"
  string logo = 4; // @gotags: valid:"optional,url"
  bool isPhysical = 5; // @gotags: valid:"-" form:"isPhysical"
  int64 capacity = 6; // @gotags: valid:"int" form:"capacity"
  string ID = 7; // @gotags: valid:"required"
}

message CreateResponse {
  message Response {
    string warehouseID = 1;
  }
  int32 status = 1;
  // @gotags: json:"response"
  oneof response {
    // @gotags: json:"data"
    Response data = 2;
    string error = 3;
  }
}

// AddUserToWarehouse
message AddUsersRequest {
  string warehouseID = 1; // @gotags: valid:"required,minstringlength(1)"
  string email = 2; // @gotags: valid:"required,email"
}

message AddUsersResponse {
  int32 status = 1;
  string response = 2;
}

// RemoveUserFromWarehouse
message RemoveUserRequest {
  string warehouseID = 1; // @gotags: valid:"required,minstringlength(1)"
  string userIds = 2; // @gotags: valid:"required,minstringlength(1)"
}

message RemoveUserResponse {
  int32 status = 1;
  string response = 2;
}

// DeleteWarehouse
message DeleteRequest {
  string warehouseID = 1; // @gotags: valid:"required,minstringlength(1)"
}

message DeleteResponse {
  int32 status = 1;
  string response = 2;
}

// ChangeRole

message ChangeRoleRequest {
  string warehouseID = 1; // @gotags: valid:"required,minstringlength(1)"
  string targetUserID = 2; // @gotags: valid:"required,minstringlength(1)"
  string uuid = 3; // @gotags: valid:"required,minstringlength(1)"
  Roles newRole = 4; // @gotags: valid:"-"
}

message ChangeRoleResponse {
  int32 status = 1;
  string response = 2;
}

//ListUsers
message ListUsersRequest{
  string warehouseID = 1; //@gotags: valid:"required,minstringlength(1)"
  int32 limit = 2; //@gotags: valid:"required,numeric,range(5|30)"
  int32 page = 3; //@gotags: valid:"required,numeric"
}

message ListUsersResponse {
  message pagination {
    int32 limit = 1;
    int32 total = 2;
    int32 page = 3; 
  }

  message user {
    string firstName = 1;
    string lastName = 2; 
    string email = 3;
    string avatar = 4;
    string id = 5;
    repeated string owns = 6; 
  }

  message list {
    user user = 1;
    Roles role = 2; //@gotags: json:"role"
  }

  message Response {
    pagination pagination = 1;
    repeated list list = 2;
  }

   int32 status = 1;
   // @gotags: json:"response"
   oneof response {
    // @gotags: json:"data"
    Response data = 2;
    string error = 3;
  } 
}

// List Warehouses
message ListWarehousesRequest{
  string uuid = 1; //@gotags: valid:"required,minstringlength(1)"
  int32 limit = 2; //@gotags: valid:"required,numeric,range(5|30)"
  int32 page = 3; //@gotags: valid:"required,numeric"
}

message ListWarehousesResponse {
  message pagination {
    int32 limit = 1;
    int32 total = 2;
    int32 page = 3; 
  }

  message warehouse {
      string name = 1;
      string desc = 2;
      string logo = 3;
      string id = 4;
      string owner = 5;
      bool isPhysical = 6;
      int64 capacity = 7;
      Roles role = 8;
  }

  message list {
    warehouse warehouse = 1;
    Roles role = 2; //@gotags: json:"role"
  }

  message Response {
    pagination pagination = 1;
    repeated list list = 2;
  }

   int32 status = 1;
   // @gotags: json:"response"
   oneof response {
    // @gotags: json:"data"
    Response data = 2;
    string error = 3;
  } 
}

// Internal

message InternalFetchWarehousesRequest {
  string userID = 1; // @gotags: valid:"required,minstringlength(1)"
}

message InternalFetchWarehousesResponse {
  message Nested {
    string warehouseID = 1;
    Roles role = 2;
  }
  repeated Nested items = 1;
  string error = 2;
}

message InternalFetchWarehouseRoleRequest {
  string warehouseID = 1; // @gotags: valid:"required,minstringlength(1)"
  string userID = 2; // @gotags: valid:"required,minstringlength(1)"
}

message InternalFetchWarehouseRoleResponse {
  message Response {
    Roles role = 1;
  }
  int32 status = 1;
  // @gotags: json:"response"
  oneof response {
    // @gotags: json:"data"
    Response data = 2;
    string error = 3;
  }
}

message InternalDeleteAccRequest {
  string userID = 1; // @gotags: valid:"required,minstringlength(1)"
}

// Dashboard 
message DashboardRequest {
  string warehouseID = 1; // @gotags: valid:"required"
}

message DashboardResponse {
  message EntitiesCount {
    int32 all = 1; // @gotags: json:"all"
    int32 unique = 2; // @gotags: json:"unique"
  }

  message NewestEntities {
    string name = 1;
    string description = 2;
    string category_id = 3;
    string created = 4;
    string entity_id = 5;
    string category_title = 6;
    float price = 7;
    int64 quantity = 8;
  }

  message Response {
    int32 employees = 1; // @gotags: json:"employees"
    float warehouseValue = 2; // @gotags: json:"warehouseValue"
    EntitiesCount entitiesCount = 3; // @gotags: json:"entitiesCount"
    repeated NewestEntities newestEntities = 4; // @gotags: json:"newestEntities"
  }
  int32 status = 1;
  // @gotags: json:"response"
  oneof response {
    // @gotags: json:"data"
    Response data = 2;
    string error = 3;
  }
}


// Service

service WarehouseService {
  rpc GetInfo (GetInfoRequest) returns (GetInfoResponse);
  rpc Dashboard (DashboardRequest) returns (DashboardResponse);
  rpc UpdateWarehouse (UpdateRequest) returns (UpdateResponse);
  rpc CreateWarehouse (CreateRequest) returns (CreateResponse);
  rpc AddUsersToWarehouse (AddUsersRequest) returns (AddUsersResponse);
  rpc RemoveUserFromWarehouse (RemoveUserRequest) returns (RemoveUserResponse);
  rpc DeleteWarehouse (DeleteRequest) returns (DeleteResponse);
  rpc ChangeRole (ChangeRoleRequest) returns (ChangeRoleResponse);
  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse);
  rpc ListWarehouses (ListWarehousesRequest) returns (ListWarehousesResponse);
  rpc InternalFetchWarehouses (InternalFetchWarehousesRequest) returns (InternalFetchWarehousesResponse);
  rpc InternalFetchWarehouseRole (InternalFetchWarehouseRoleRequest) returns (InternalFetchWarehouseRoleResponse);
  rpc InternalDeleteAcc (InternalDeleteAccRequest) returns (google.protobuf.Empty);
}