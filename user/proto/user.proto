syntax = "proto3";
package proto;

option go_package="github.com/CrabStash/crab-stash-protofiles/user/proto";

message MeInfoRequest{
    string userID=1; // @gotags: valid:"required,minstringlength(1)"

}

message MeInfoResponse{
    message Response{
    string firstName=1; //@gotags: valid:"minstringlength(1)"
    string lastName=2; //@gotags: valid:"minstringlength(1)"
    string email=3;//@gotags: valid:"email"
    string avatar=4;//@gotags: valid:"url"
    string id = 5; //@gotags: valid:"required"
    repeated string owns= 6; 
    }
    int32 status=1;

    // @gotags: json:"response"
    oneof response{
        // @gotags: json:"data"
        Response data=2;
        string error=3;
    }
    
}

message UpdateUserInfoRequest{
    message Data{
    string firstName=1; //@gotags: valid:"minstringlength(1)"
    string lastName=2; //@gotags: valid:"minstringlength(1)"
    string email=3; //@gotags: valid:"email"
    string avatar=4; //@gotags: valid:"url"
    string default_warehouse = 5; //@gotags: valid:"minstringlength(1)"
    }
    string userID=1;//@gotags: valid:"required"
    Data data=2; // @gotags: valid:"required"
}

message UpdateUserInfoResponse{ 
    int32 status=1;
    string response=2;
}

message GetUserInfoRequest{
    string id=1; //@gotags: valid:"required"
}

message GetUserInfoResponse{
    message Response{
        string firstName=1; //@gotags: valid:"minstringlength(1)"
        string lastName=2; //@gotags: valid:"minstringlength(1)"
        string email=3; //@gotags: valid:"required,email"
        string avatar=4; //@gotags: valid:"url"
    }
    int32 status=1;
    // @gotags: json:"response"
    oneof response{
        // @gotags: json:"data"
        Response data=2;
        string error=3;
    }
}

// internal

message InternalGetUserByEmailRequest{
    string email=1;
}

message InternalGetUserByEmailAuthResponse{
    string id=1; // @gotags: valid:"required,minstringlength(1)"
    string passwd=2; // @gotags: valid:"required"
    string email=3; //@gotags: valid:"required,email"
    int32 status=4;
    string response=5;
    
}

message InternalGetUserByEmailWarehouseResponse{
    string id=1; // @gotags: valid:"required,minstringlength(1)"
    int32 status=2;
    string response=3;
}

message DeleteUserRequest{
    string userID=1; // @gotags: valid:"required,minstringlength(1)"
}

message DeleteUserResponse{
    int32 status=1;
    string response=2;
}

message InternalGetUserByUUIDCheck{
    string id=1; // @gotags: valid:"required,minstringlength(1)"
    int32 status=2;
    string response=3;
}

service UserService{
    rpc MeInfo(MeInfoRequest) returns(MeInfoResponse);
    rpc UpdateUserInfo(UpdateUserInfoRequest) returns(UpdateUserInfoResponse);
    rpc GetUserInfo(GetUserInfoRequest) returns(GetUserInfoResponse);
    rpc DeleteUser(DeleteUserRequest) returns(DeleteUserResponse);
    //Internal comms below   v
    rpc InternalGetUserByEmailAuth(InternalGetUserByEmailRequest) returns (InternalGetUserByEmailAuthResponse);
    rpc InternalGetUserByEmailWarehouse(InternalGetUserByEmailRequest) returns(InternalGetUserByEmailWarehouseResponse);
    rpc InternalGetUserByUUID(InternalGetUserByUUIDCheck) returns(InternalGetUserByUUIDCheck);
}