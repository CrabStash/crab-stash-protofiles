syntax = "proto3";

package core;

option go_package = "github.com/CrabStash/crab-stash-protofiles/core/proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

// basic definitions

message Field {
  string title = 1;
  string type = 2;
  string help = 3;
}

message GenericSchema {
  string title = 1;
  string description = 2;
  string type = 3;
  map<string, Field> properties = 4;
}


// Services

message Schema {
  bytes file_content = 1;
}

message CoreMiddlewareResponse {
  bool doesItBelong = 1;
}

// misc 
message InheritanceResponse {
  message Parent {
    repeated string fieldNames = 1;
    string id = 2;
    string name = 3; //@gotags: json:"title"
  }

  message Response {
    repeated Parent parents = 1;
  }

  int32 status = 1;
  //@gotags: json:"response"
  oneof response {
    //@gotags: json:"data"
    Response data = 2;
    string error = 3; 
  }
}


// Creation Edition
message FieldRequest {  
  string warehouseID = 1;
  Field formData = 2;
}

message CategoryRequest {
  message Payload {
    string title = 1;
    string description = 2;
    repeated string parents = 3;
    repeated string properties = 4;
  }
  string warehouseID = 1;
  Payload formData = 2;
}

message EntityRequest {
  string warehouseID = 1;
  string entityID = 2;
  map<string, google.protobuf.Any> formData = 3;
}

// generics
message GenericCreateResponse {
  message Response {
    string id = 1;
  }
  int32 status = 1;
  oneof response {
    Response data = 2;
    string error = 3;
  }
}

message GenericEditDeleteResponse {
  int32 status = 1;
  string response = 2;
}

message GenericFetchRequest {
  string warehouseID = 1; //@gotags: valid:"required"
  string entityID = 2; //@gotags: valid:"required"
  string type = 3; //@gotags: valid:"required"
}

message GenericFetchResponse {
  message Response {
    GenericSchema schema = 1;
    map<string, google.protobuf.Any> formData = 2;
  }

  int32 status = 1;
  //@gotags: json:"response"
  oneof response {
    //@gotags: json:"data"
    Response data = 2;
    string error = 3; 
  }
}


// service
service CoreService {
  // creation
    rpc CreateField (FieldRequest) returns (GenericCreateResponse);
    rpc CreateCategory (CategoryRequest) returns (GenericCreateResponse);
    rpc CreateEntity (EntityRequest) returns (GenericCreateResponse);
  // editing
    rpc EditField (FieldRequest) returns (GenericEditDeleteResponse);
    rpc EditCategory (CategoryRequest) returns (GenericEditDeleteResponse);
    rpc EditEntity (EntityRequest) returns (GenericEditDeleteResponse);
  // deleting
    rpc DeleteField (GenericFetchRequest) returns (GenericEditDeleteResponse);
    rpc DeleteEntity (GenericFetchRequest) returns (GenericEditDeleteResponse);
    rpc DeleteCategory (GenericFetchRequest) returns (GenericEditDeleteResponse);
  // fetching
    rpc NewCategorySchema (google.protobuf.Empty) returns (Schema);
    rpc NewFieldSchema (google.protobuf.Empty) returns (Schema);
    rpc GetCategorySchema (GenericFetchRequest) returns (GenericFetchResponse);
    rpc GetFieldSchema (GenericFetchRequest) returns (GenericFetchResponse);
    rpc GetEntitySchema (GenericFetchRequest) returns (GenericFetchResponse);
  // listing
    // rpc ListAllFields () returns ();
    // rpc ListCategories () returns ();
    // rpc ListEntities () returns ();
  //misc
    rpc FieldsInheritance (GenericFetchRequest) returns (InheritanceResponse);
    rpc CoreMiddleware (GenericFetchRequest) returns (CoreMiddlewareResponse);
}